package runnermod.cards.uncommon;

import com.megacrit.cardcrawl.actions.common.ApplyPowerAction;
import com.megacrit.cardcrawl.actions.common.DrawCardAction;
import com.megacrit.cardcrawl.actions.common.ExhaustSpecificCardAction;
import com.megacrit.cardcrawl.actions.common.GainBlockAction;
import com.megacrit.cardcrawl.cards.AbstractCard;
import com.megacrit.cardcrawl.characters.AbstractPlayer;
import com.megacrit.cardcrawl.dungeons.AbstractDungeon;
import com.megacrit.cardcrawl.monsters.AbstractMonster;
import com.megacrit.cardcrawl.powers.WeakPower;
import com.megacrit.cardcrawl.random.Random;
import runnermod.cards.BaseCard;
import runnermod.cards.tempcards.Virus;
import runnermod.character.RunnerCharacter;
import runnermod.util.CardStats;

import java.util.ArrayList;
import java.util.List;

public class MalwareScan extends BaseCard {
    public static final String ID = makeID(MalwareScan.class.getSimpleName());
    private static final CardStats info = new CardStats(
            RunnerCharacter.Enums.CARD_COLOR,
            CardType.SKILL,
            CardRarity.UNCOMMON,
            CardTarget.NONE,
            0
    );

    //Card Stats
    private static final int BLOCK = 7;
    private static final int UPG_BLOCK = 0;
    private static final int MAGIC = 1;
    private static final int UPG_MAGIC = 2;
    Random rng = new Random();
    public MalwareScan()
    {
        super(ID,info);
        setMagic(MAGIC,UPG_MAGIC);
        tags.add(RunnerCharacter.Enums.NEON);
    }


    //when the card is played
    @Override
    public void use(AbstractPlayer p, AbstractMonster m) {
        List<AbstractCard> statuses = new ArrayList<AbstractCard>();
        for (AbstractCard c:AbstractDungeon.player.discardPile.group ) {
            if(c.type == CardType.STATUS)
            {
                statuses.add(c);
            }
        }

        for (int i = 0; i < magicNumber; i++) {
            if (statuses.size() > 0)
            {
                int randomIndex = rng.random(1,statuses.size())-1;
                addToBot(new ExhaustSpecificCardAction(statuses.get(randomIndex), AbstractDungeon.player.drawPile));
                statuses.remove(randomIndex);
            }
        }
        addToBot(new DrawCardAction(1));
    }
}
