package runnermod.cards.uncommon;

import com.megacrit.cardcrawl.actions.AbstractGameAction;
import com.megacrit.cardcrawl.actions.common.PutOnBottomOfDeckAction;
import com.megacrit.cardcrawl.cards.AbstractCard;
import com.megacrit.cardcrawl.cards.CardGroup;
import com.megacrit.cardcrawl.dungeons.AbstractDungeon;

public class MalwareScanExhaustAction extends AbstractGameAction {

    int amountToRemove;
    MalwareScanExhaustAction(int amountToRemove)
    {
        this.actionType = ActionType.CARD_MANIPULATION;
        this.amountToRemove = amountToRemove;
    }


    //the effect that executes on the stack when able to
    @Override
    public void update() {

        //mark as completed so it doesn't repeat every frame and can be removed from the buffer
        CardGroup statuses = new CardGroup(CardGroup.CardGroupType.UNSPECIFIED);
        for (AbstractCard c:AbstractDungeon.player.discardPile.group ) {
            if(c.type == AbstractCard.CardType.STATUS)
            {
                statuses.addToRandomSpot(c);
            }
        }
        for (AbstractCard c:AbstractDungeon.player.drawPile.group ) {
            if(c.type == AbstractCard.CardType.STATUS)
            {
                statuses.addToRandomSpot(c);
            }
        }
        for (AbstractCard c:AbstractDungeon.player.hand.group ) {
            if(c.type == AbstractCard.CardType.STATUS)
            {
                statuses.addToRandomSpot(c);
            }
        }

        for (int i = 0; i < amountToRemove; i++) {
            if (statuses.size() > 0)
            {
                exhaustCard(statuses.getRandomCard(true),statuses);
            }
        }
        this.isDone = true;
    }

    private void exhaustCard(AbstractCard c, CardGroup ownerGroup)
    {
        if (AbstractDungeon.player.hand.contains(c))
        {
            AbstractDungeon.player.hand.removeCard(c);
        }
        if (AbstractDungeon.player.discardPile.contains(c))
        {
            AbstractDungeon.player.discardPile.removeCard(c);
        }
        if (AbstractDungeon.player.drawPile.contains(c))
        {
            AbstractDungeon.player.drawPile.removeCard(c);
        }
        ownerGroup.moveToExhaustPile(c);
    }
}
